/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-11 05:30:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.홍성민_005f국민._0502과제.국민;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.MemberDAO;
import member.MemberDTO;
import java.util.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.MemberDAO");
    _jspx_imports_classes.add("member.MemberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>건강보험공단</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"wrap\">\r\n");
      out.write("        <section id=\"signup\" class=\"main\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"title\">\r\n");
      out.write("                    <h2>건강보험공단</h2>\r\n");
      out.write("                </div>\r\n");
      out.write("                    ");

                        String loginId = null;
                        if(session.getAttribute("menu1") !=null){
                            loginId = (String) session.getAttribute("menu1");
                        }
                        if(loginId==null){
                    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <div class=\"content\">\r\n");
      out.write("                    <h3>접속하기</h3>\r\n");
      out.write("                    <ul>\r\n");
      out.write("                        <li><a href=\"./login.jsp\">로그인</a></li>\r\n");
      out.write("                        <li><a href=\"./insert.jsp\">회원가입</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                    }
                    else{
                
      out.write("\r\n");
      out.write("                <div class=\"content\">\r\n");
      out.write("                    <div class=\"content\">\r\n");
      out.write("                        <h3>회원관리</h3>\r\n");
      out.write("                        <h4>회원[");
      out.print( loginId);
      out.write("]님</h4>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"./update.jsp\">개인정보수정</a></li>\r\n");
      out.write("                            <li><a href=\"./delete.jsp\">회원탈퇴</a></li>\r\n");
      out.write("                            <li><a href=\"./logout.jsp\">로그아웃</a></li>                        \r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"get-join-list\">\r\n");
      out.write("                <table>\r\n");
      out.write("                    <caption>회원목록</caption>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>아이디</th>\r\n");
      out.write("                        <th>사업장관리번호</th>\r\n");
      out.write("                        <th>사업장기호</th>\r\n");
      out.write("                        <th>단위사업장기호</th>\r\n");
      out.write("                        <th>비밀번호</th>\r\n");
      out.write("                        <th>비밀번호확인</th>\r\n");
      out.write("                        <th>비밀번호 분실 시 확인 질문</th>\r\n");
      out.write("                        <th>비밀번호 분실 시 확인 답변</th>\r\n");
      out.write("                        <th>전화번호</th>\r\n");
      out.write("                        <th>업무담당자명</th>\r\n");
      out.write("                        <th>이메일</th>\r\n");
      out.write("                        <th>소식지 수신여부</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                ");

                    MemberDAO memberDAO = new MemberDAO();
                    List<MemberDTO> list = new ArrayList<>();
                    list = memberDAO.getJoinList();
    
                    if(list.size()==0){
                        out.println("<script>alert('없음');</script>");
                    }
                    else{
                        for(MemberDTO item : list){
                
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu1());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu2());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu3());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu4());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu5());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu6());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu7());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu8());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu9());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu10());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu11());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( item.getMenu12());
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("  \r\n");
      out.write("              </table>\r\n");
      out.write("              ");

                }
              
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
