/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-16 06:47:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp._0516_005fMVC_005f모델링_005f프로젝트_005fAJAX_005fDTO_005fDAO.쇼핑몰고객관리;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kurly.UserDAO;

public final class kurly_005fuser_005fsignup_005faction_005ftest_005fparameter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kurly.UserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


    response.setHeader("Access-Control-Allow-Origin", "*");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
    request.setCharacterEncoding("UTF-8"); 

      out.write("\r\n");
      out.write("\r\n");

    // Requeset : 리액트에서 AJAX REST API로 전송된 프로퍼티를 
    // 자바 DTO에게 useBean을 통해서 저장하고
    // Response : 다시 DTO에서 getUser_id()
    // 게터함수(getter)로 입력데이터를 다시 리액트에게 응답하는 절차

      out.write("\r\n");
      out.write("\r\n");

    String user_id =        request.getParameter("user_id");
    String user_pw =        request.getParameter("user_pw");
    String user_irum =      request.getParameter("user_irum");
    String user_email =     request.getParameter("user_email");
    String user_hp =        request.getParameter("user_hp");
    String user_addr =      request.getParameter("user_addr");
    String user_gender =    request.getParameter("user_gender");
    String user_birth =     request.getParameter("user_birth");
    String user_chooga =    request.getParameter("user_chooga");
    String user_service =   request.getParameter("user_service");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("{\"아이디\":\"");
      out.print(user_id);
      out.write("\", \"비밀번호\":\"");
      out.print(user_pw);
      out.write("\", \"이름\":\"");
      out.print(user_irum);
      out.write("\", \"이메일\":\"");
      out.print(user_email);
      out.write("\", \"휴대폰\":\"");
      out.print(user_hp);
      out.write("\",\"주소\":\"");
      out.print(user_addr);
      out.write("\", \"성별\":\"");
      out.print(user_gender);
      out.write("\", \"생년월일\":\"");
      out.print(user_birth);
      out.write("\", \"추가입력사항\":\"");
      out.print(user_chooga);
      out.write("\", \"이용약관\":\"");
      out.print(user_service);
      out.write('"');
      out.write('}');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
